{"version":3,"file":"js/app.88533e3b.js","mappings":"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","sources":["webpack://ytclipplaylist/./src/App.vue","webpack://ytclipplaylist/./src/App.vue?7ccd","webpack://ytclipplaylist/./src/views/SegmentSelector.vue","webpack://ytclipplaylist/./src/components/YouTubePlayer.vue","webpack://ytclipplaylist/./src/components/YouTubePlayer.vue?e804","webpack://ytclipplaylist/./src/components/SegmentItem.vue","webpack://ytclipplaylist/./src/components/SegmentItem.vue?558f","webpack://ytclipplaylist/./src/mixins/segmentMixin.js","webpack://ytclipplaylist/./src/views/SegmentSelector.vue?7744","webpack://ytclipplaylist/./src/views/ViewerInterface.vue","webpack://ytclipplaylist/./src/views/ViewerInterface.vue?8fc6","webpack://ytclipplaylist/./src/router/index.js","webpack://ytclipplaylist/./src/main.js","webpack://ytclipplaylist/webpack/bootstrap","webpack://ytclipplaylist/webpack/runtime/chunk loaded","webpack://ytclipplaylist/webpack/runtime/compat get default export","webpack://ytclipplaylist/webpack/runtime/define property getters","webpack://ytclipplaylist/webpack/runtime/global","webpack://ytclipplaylist/webpack/runtime/hasOwnProperty shorthand","webpack://ytclipplaylist/webpack/runtime/make namespace object","webpack://ytclipplaylist/webpack/runtime/jsonp chunk loading","webpack://ytclipplaylist/webpack/startup"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <router-view />\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=fc8a20c0\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=fc8a20c0&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div class=\"segment-selector\">\n        <header>\n            <h1>Video Segment Selector</h1>\n            <input type=\"file\" @change=\"loadJson\" ref=\"fileInput\" style=\"display: none;\" />\n            <button @click=\"triggerFileInput\">Load JSON File</button>\n            <button @click=\"saveJson\">Save/Download JSON File</button>\n            <button @click=\"createSharableLink\">Create a Sharable Link</button>\n            <a v-if=\"sharableLink\" :href=\"sharableLink\" target=\"_blank\">Open Sharable Link</a>\n        </header>\n        <div class=\"content-area\">\n            <main>\n                <div class=\"video-url-input\">\n                    <label for=\"videoUrl\">Video URL:</label>\n                    <input id=\"videoUrl\" v-model=\"videoUrl\" type=\"text\" placeholder=\"Enter YouTube video URL\"\n                        class=\"video-url-input-field\">\n                    <button @click=\"applyVideoUrl\">Apply</button>\n                </div>\n                <YouTubePlayer class=\"youtube-player\" ref=\"youtubePlayer\" :videoId=\"selectedVideoId\"\n                    :startTime=\"selectedSegment.startTime\" :pauseTime=\"selectedSegment.endTime\" />\n            </main>\n            <aside>\n                <draggable v-model=\"segments\" item-key=\"id\" @end=\"onEnd\" class=\"segments-list\">\n                    <template #header>\n                        <button @click=\"addSegment\">Add New Segment</button>\n                    </template>\n                    <template #item=\"{ element, index }\">\n                        <SegmentItem :segment=\"element\" :key=\"element.id\" :index=\"index\"\n                            :class=\"{ 'selected-segment': element === selectedSegment }\"\n                            @click=\"() => selectSegment(element)\" @delete-segment=\"removeSegment\"\n                            @set-start-time=\"() => setCurrentTime(element, 'start')\"\n                            @set-end-time=\"() => setCurrentTime(element, 'end')\" />\n                    </template>\n                </draggable>\n            </aside>\n        </div>\n    </div>\n</template>\n  \n<script>\nimport draggable from 'vuedraggable';\n\nimport YouTubePlayer from '@/components/YouTubePlayer.vue';\nimport SegmentItem from '@/components/SegmentItem.vue';\nimport { segmentMixin } from '@/mixins/segmentMixin.js';\n\nexport default {\n    mixins: [segmentMixin],\n    components: {\n        YouTubePlayer,\n        draggable,\n        SegmentItem,\n    },\n    name: 'SegmentSelector',\n    data() {\n        return {\n            videoUrl: 'https://www.youtube.com/watch?v=et5Jb68dnio&t=4098s',\n            selectedVideoId: '',\n            segments: [],\n            selectedSegment: {},\n            filterText: '',\n            sharableLink: '',\n            maxSegmentId: 0,\n        };\n    },\n    watch: {\n        segments: {\n            handler(newSegments) {\n                sessionStorage.setItem('segments', JSON.stringify(newSegments));\n            },\n            deep: true // Watch for changes in array objects\n        }\n    },\n    computed: {\n        filteredSegments() {\n            return this.segments.filter(segment =>\n                segment.name.toLowerCase().includes(this.filterText.toLowerCase())\n            );\n        },\n    },\n    methods: {\n        triggerFileInput() {\n            this.$refs.fileInput.click(); // Access the file input using $refs and trigger click\n        },\n        loadJson(event) {\n            const file = event.target.files[0]; // Access the selected file\n            if (file) {\n                const reader = new FileReader();\n                reader.onload = (e) => {\n                    // Handle file content\n                    const content = e.target.result;\n                    // Assuming content is JSON and needs to be processed\n                    try {\n                        const compactData = JSON.parse(content);\n                        this.segments = this.convertFromCompactFormat(compactData);\n                    } catch (error) {\n                        console.error(\"Error parsing JSON:\", error);\n                        // Handle error\n                    }\n                };\n                reader.readAsText(file);\n            }\n        },\n        saveJson() {\n            const compactSegments = this.convertToCompactFormat(this.segments);\n            const jsonString = JSON.stringify(compactSegments);\n            this.downloadJson(jsonString, \"segments.json\");\n        },\n        downloadJson(jsonString, filename) {\n            const blob = new Blob([jsonString], { type: \"application/json\" });\n            const url = URL.createObjectURL(blob);\n            const link = document.createElement('a');\n            link.href = url;\n            link.download = filename;\n            document.body.appendChild(link); // Append link to body temporarily\n            link.click(); // Trigger download\n            document.body.removeChild(link); // Remove link after triggering download\n            URL.revokeObjectURL(url); // Clean up to release resources\n        },\n        createSharableLink() {\n            const compactSegments = this.convertToCompactFormat(this.segments);\n            const jsonData = JSON.stringify(compactSegments);\n            const base64EncodedData = btoa(encodeURIComponent(jsonData)); // Encode the JSON string as Base64\n            const viewerUrl = `${window.location.origin}/viewer?data=${base64EncodedData}`; // Construct the viewer URL with the encoded data as a parameter\n\n            // Check if the URL exceeds 2000 characters, a common practical limit\n            if (viewerUrl.length > 2000) {\n                alert(\"The generated link is too long and might not be supported by some browsers. Please reduce the number of segments.\");\n            } else {\n                this.sharableLink = viewerUrl;\n                window.focus(); // Attempt to focus the window before accessing the clipboard\n                this.copyToClipboard(viewerUrl);\n            }\n        },\n        copyToClipboard(text) {\n            navigator.clipboard.writeText(text).then(() => {\n                alert(\"Sharable link created and copied to clipboard!\");\n                console.log(\"Text copied to clipboard\");\n            }).catch(err => {\n                console.error('Error in copying text: ', err);\n                // Fallback: Display the text in a selectable input or textarea and prompt the user to copy it manually\n                alert(\"Automatic copy failed. Please copy the text manually\");\n            });\n        },\n\n        applyVideoUrl() {\n            // Extract the video ID from the URL\n            const videoId = this.extractVideoId(this.videoUrl);\n            if (videoId) {\n                // If a video ID is found, update selectedVideoId with it\n                this.selectedVideoId = videoId;\n            } else {\n                // Handle cases where the URL might not be a valid YouTube watch URL\n                console.error(\"Invalid YouTube URL\");\n            }\n        },\n        extractVideoId(url) {\n            const match = url.match(/(?:https?:\\/\\/)?(?:www\\.)?(?:youtube\\.com\\/(?:[^/\\n\\s]+\\/\\S+\\/|(?:v|e(?:mbed)?)\\/|\\S*?[?&]v=)|youtu\\.be\\/)([a-zA-Z0-9_-]{11})/);\n            return match ? match[1] : null;\n        },\n        removeSegment(index) {\n            this.segments.splice(index, 1);\n        },\n        addSegment() {\n            const videoId = this.extractVideoId(this.videoUrl);\n            if (videoId) {\n                this.segments.push({\n                    id: this.maxSegmentId++,\n                    name: \"\",\n                    videoId: videoId, // Storing only the video ID\n                    startTime: this.$refs.youtubePlayer.getCurrentTime(),\n                    endTime: 0\n                });\n                this.selectSegment(this.segments[this.segments.length - 1]);\n            } else {\n                console.error(\"Invalid YouTube URL\");\n            }\n        },\n        selectSegment(segment) {\n            this.selectedSegment = segment;\n            this.videoUrl = \"https://www.youtube.com/watch?v=\" + segment.videoId;\n            this.applyVideoUrl();\n        },\n        // Method to request current time from YouTubePlayer and set it for start/end\n        setCurrentTime(segment, timeType) {\n            if (timeType === 'start') {\n                segment.startTime = this.$refs.youtubePlayer.getCurrentTime();\n            } else if (timeType === 'end') {\n                segment.endTime = this.$refs.youtubePlayer.getCurrentTime();\n            }\n        },\n        onEnd(event) {\n            // event.oldIndex - the index of the item before drag started\n            // event.newIndex - the index of the item after drag ended\n            const oldIndex = event.oldIndex - 1;\n            const newIndex = event.newIndex - 1;\n            console.log(`Moved item from index ${oldIndex} to ${newIndex}`);\n            // console.log(\"old\", this.segments[oldIndex], \"new\", this.segments[newIndex], ...this.segments);\n\n            // Check if the item was moved (the indices are different)\n            if (oldIndex !== newIndex) {\n                // this.segments = [...this.segments];\n                // console.log(movedItem, this.segments);\n            }\n        },\n    },\n    mounted() {\n        const urlParams = new URLSearchParams(window.location.search);\n        const dataParam = urlParams.get('data');\n        if (dataParam) {\n            const decodedData = this.decodeQueryParam(dataParam);\n            try {\n                const compactSegments = JSON.parse(decodedData);\n                this.segments = this.convertFromCompact(compactSegments);\n                // Save to session storage\n                sessionStorage.setItem('segments', JSON.stringify(this.segments));\n\n                // Remove 'data' parameter from URL\n                const newUrl = window.location.protocol + \"//\" + window.location.host + window.location.pathname;\n                window.history.pushState({ path: newUrl }, '', newUrl);\n            } catch (error) {\n                console.error('Error parsing segments data:', error);\n            }\n        } else {\n            // Load from session storage if 'data' parameter is not present\n            const storedSegments = sessionStorage.getItem('segments');\n            if (storedSegments) {\n                this.segments = JSON.parse(storedSegments);\n            }\n        }\n\n        this.segments = this.segments.filter(s => s); // remove null entry\n\n        if (this.segments && this.segments.length) {\n            this.selectSegment(this.segments[0]);\n            this.segments.forEach(segment => segment.id = this.maxSegmentId++);\n        }\n    },\n};\n</script>\n  \n<style scoped>\n.video-url-input-field {\n    width: 100%;\n    /* Makes the input take the full width of its parent container */\n    /* Or use a specific pixel width, e.g., width: 500px; */\n    max-width: 500px;\n    /* Optional: ensures the input doesn't grow beyond a certain width */\n    /* Additional styling to improve the input's appearance */\n    padding: 8px;\n    margin: 5px 0;\n    box-sizing: border-box;\n    /* Ensures padding does not affect the final size */\n}\n\n.segment-selector {\n    display: flex;\n    flex-direction: column;\n}\n\nheader {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.content-area {\n    display: flex;\n    flex-direction: row;\n    /* Aligns children (main and aside) horizontally */\n}\n\nmain {\n    flex-grow: 1;\n}\n\naside {\n    width: 300px;\n    /* Adjust the width of the segment list as needed */\n    /* Styles for the left side section */\n}\n\n.youtube-player {\n    /* Styles for the YouTube player container */\n}\n\n.segments-list {\n    list-style-type: none;\n    padding: 0;\n}\n\n.segments-list li {\n    cursor: pointer;\n    margin: 10px 0;\n}\n\n.selected-segment {\n    background-color: rgba(0, 123, 255, 0.2);\n    /* Light transparent blue */\n    /* Add other styles as needed (e.g., padding, margin) */\n}\n</style>\n  ","<template>\n    <div class=\"youtube-player\" ref=\"youtubePlayer\"></div>\n</template>\n  \n<script>\nexport default {\n    name: 'YouTubePlayer',\n    props: {\n        videoId: String,\n        startTime: Number,\n        pauseTime: Number,\n        enablePause: {\n            type: Boolean,\n            default: true, // Default to true if you want the pause behavior enabled by default\n        },\n    },\n    watch: {\n        videoId: {\n            immediate: true,\n            handler(newVal) {\n                if (newVal) {\n                    this.loadVideo(newVal);\n                }\n            },\n        },\n        startTime: {\n            immediate: false, // Changed to false because immediate seek might not work if player isn't ready\n            handler(newVal) {\n                if (newVal !== undefined && this.player && typeof this.player.seekTo === 'function') {\n                    this.player.seekTo(newVal, true);\n                    this.player.playVideo();\n                }\n            },\n        },\n        pauseTime(newVal, oldVal) {\n            // If pauseTime changes, restart the checking\n            if (newVal !== oldVal && this.player && typeof this.player.getPlayerState === 'function') {\n                this.startCheckingPlayProgress();\n            }\n        },\n    },\n    methods: {\n        loadVideo(videoId) {\n            const component = this;\n            function onYouTubeIframeAPIReady() {\n                console.log(\"Initializing YouTube Player with video ID:\", videoId, \"and start time:\", component.startTime);\n                component.player = new window.YT.Player(component.$refs.youtubePlayer, {\n                    height: '390',\n                    width: '640',\n                    videoId: videoId,\n                    playerVars: {\n                        mute: 1,\n                        autoplay: 1, // Auto-play the video on load\n                        start: component.startTime, // Start at `startTime` seconds\n                        end: component.pauseTime,\n                        rel: 0, // Try to limit related videos to those from the same channel\n                    },\n                    events: {\n                        onReady: component.onPlayerReady,\n                        onStateChange: component.onPlayerStateChange,\n                        onAutoplayBlocked: (event) => { console.log(\"onAutoplayBlocked\", event, event.target.getPlayerState()) }\n                    },\n                });\n            }\n\n            if (!window.YT) {\n                const tag = document.createElement('script');\n                tag.src = \"https://www.youtube.com/iframe_api\";\n                const firstScriptTag = document.getElementsByTagName('script')[0];\n                firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n                window.onYouTubeIframeAPIReady = onYouTubeIframeAPIReady;\n            } else if (!component.player) {\n                onYouTubeIframeAPIReady();\n            } else {\n                component.player.loadVideoById({ videoId: videoId, startSeconds: component.startTime, endSeconds: component.pauseTime });\n            }\n        },\n        onPlayerReady(event) {\n            // The player is now ready.\n            // If additional setup is needed upon player readiness, handle it here.\n            this.$emit('player-ready', event);\n        },\n        onPlayerStateChange(event) {\n            console.log(\"onPlayerStateChange\", event.data, this.isInit);\n            // YT.PlayerState.UNSTARTED is -1, which may indicate blocking in some cases\n            // YT.PlayerState.CUED is 5, indicating the video is cued but not playing\n            if (event.data === window.YT.PlayerState.UNSTARTED || event.data === window.YT.PlayerState.CUED) {\n                console.log('Autoplay might be blocked, attempting to play video.');\n                // Attempt to play the video. Consider muting the player first if not already muted.\n                event.target.mute(); // Optional: Mute the player to increase likelihood of autoplay working\n                event.target.playVideo();\n            }\n            else if (this.isInit) {\n                event.target.seekTo(this.startTime, true);\n                this.startCheckingPlayProgress();\n                this.isInit = false;\n            }\n        },\n        getCurrentTime() {\n            if (this.player && typeof this.player.getCurrentTime === 'function') {\n                const currentTime = this.player.getCurrentTime();\n                return currentTime;\n            }\n        },\n        setStartTime(startTime) {\n            console.log(\"setStartTime\", startTime);\n            // Check if player is ready and seekTo function is available\n            if (this.player && typeof this.player.seekTo === 'function') {\n                this.player.seekTo(startTime, true);\n            }\n        },\n        startCheckingPlayProgress() {\n            // Ensure there's no existing interval running\n            if (this.checkPlayProgressInterval) {\n                clearInterval(this.checkPlayProgressInterval);\n            }\n\n            // Set up an interval to regularly check the pause condition\n            this.checkPlayProgressInterval = setInterval(this.checkPlayProgress, 500); // Check every second\n        },\n        checkPlayProgress() {\n            const currentTime = this.getCurrentTime();\n            if (this.pauseTime && currentTime >= this.pauseTime) {\n                console.log(\"over-pause-time\");\n                this.$emit('over-pause-time');\n                // Only proceed if pause behavior is enabled\n                if (this.enablePause) {\n                    console.log(\"pauseVideo\");\n                    this.player.pauseVideo();\n                    // Optionally, clear the interval once the video is paused\n                    if (this.checkPlayProgressInterval) {\n                        clearInterval(this.checkPlayProgressInterval);\n                        this.checkPlayProgressInterval = null; // Reset the interval ID\n                    }\n                }\n            }\n        },\n    },\n    mounted() {\n        this.isInit = true;\n    },\n    beforeUnmount() {\n        if (this.player && this.player.destroy) {\n            this.player.destroy();\n        }\n    }\n};\n</script>\n  \n<style scoped>\n.youtube-player {\n    /* Styles for the YouTube player container */\n}\n</style>\n  ","import { render } from \"./YouTubePlayer.vue?vue&type=template&id=5287b208&scoped=true\"\nimport script from \"./YouTubePlayer.vue?vue&type=script&lang=js\"\nexport * from \"./YouTubePlayer.vue?vue&type=script&lang=js\"\n\nimport \"./YouTubePlayer.vue?vue&type=style&index=0&id=5287b208&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5287b208\"]])\n\nexport default __exports__","<template>\n    <div class=\"segment-item\">\n        <!-- Conditionally display name as input or plain text -->\n        <div v-if=\"isReadOnly\">Name: {{ localSegment.name }}</div>\n        <div v-else>Name: <input v-model=\"localSegment.name\" placeholder=\"Segment name\"></div>\n\n        <div>Video id: {{ localSegment.videoId }}</div>\n        <div>\n            <span>Start: {{ formatTime(localSegment.startTime) }}&nbsp;</span>\n            <!-- Conditionally display set start time button -->\n            <span v-if=\"!isReadOnly\" @click=\"$emit('set-start-time', localSegment)\" class=\"time-setter fa fa-pencil\" title=\"Set with the current play time\"></span>\n        </div>\n        <div>\n            <span>End: {{ formatTime(localSegment.endTime) }}&nbsp;</span>\n            <!-- Conditionally display set end time button -->\n            <span v-if=\"!isReadOnly\" @click=\"$emit('set-end-time', localSegment)\" class=\"time-setter fa fa-pencil\" title=\"Set with the current play time\"></span>\n        </div>\n        <!-- The delete button can also be conditionally shown or hidden -->\n        <button v-if=\"!isReadOnly\" class=\"delete-button\" @click=\"$emit('delete-segment', segment)\">X</button>\n    </div>\n</template>\n  \n<script>\nexport default {\n    props: {\n    segment: Object,\n    isReadOnly: {\n        type: Boolean,\n        default: false,\n    },\n},\n    data() {\n        return {\n            localSegment: this.segment,\n        };\n    },\n    methods: {\n        formatTime(seconds) {\n            // Convert seconds to HH:MM:SS format\n            const pad = (num, size) => ('000' + num).slice(size * -1);\n            const time = parseFloat(seconds).toFixed(3);\n            const hours = Math.floor(time / 60 / 60);\n            const minutes = Math.floor(time / 60) % 60;\n            const secs = Math.floor(time - minutes * 60);\n            return pad(hours, 2) + ':' + pad(minutes, 2) + ':' + pad(secs, 2);\n        },\n        deleteSegment() {\n            this.$emit('delete-segment', this.index);\n        }\n    }\n}\n</script>\n  \n<style scoped>\n.segment-item {\n    position: relative;\n    /* Additional styling */\n}\n\n.delete-button {\n    position: absolute;\n    top: 0;\n    right: 0;\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n    color: red;\n}\n</style>\n  ","import { render } from \"./SegmentItem.vue?vue&type=template&id=3e8f08b0&scoped=true\"\nimport script from \"./SegmentItem.vue?vue&type=script&lang=js\"\nexport * from \"./SegmentItem.vue?vue&type=script&lang=js\"\n\nimport \"./SegmentItem.vue?vue&type=style&index=0&id=3e8f08b0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3e8f08b0\"]])\n\nexport default __exports__","export const segmentMixin = {\n    methods: {\n        decodeQueryParam(param) {\n            return decodeURIComponent(window.atob(param));\n        },\n        convertFromCompact(compactData) {\n            return compactData.map(item => ({\n                name: item[0],\n                videoId: item[1],\n                startTime: item[2],\n                endTime: item[3],\n            }));\n        },\n        convertToCompactFormat(segments) {\n            return segments.map(segment => [\n                segment.name, segment.videoId, Math.round(segment.startTime), Math.round(segment.endTime)\n            ]);\n        },\n    },\n};\n","import { render } from \"./SegmentSelector.vue?vue&type=template&id=cb2a1c06&scoped=true\"\nimport script from \"./SegmentSelector.vue?vue&type=script&lang=js\"\nexport * from \"./SegmentSelector.vue?vue&type=script&lang=js\"\n\nimport \"./SegmentSelector.vue?vue&type=style&index=0&id=cb2a1c06&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-cb2a1c06\"]])\n\nexport default __exports__","<template>\n    <div class=\"viewer-interface\">\n        <header>\n            <h1>Video Segment Viewer</h1>\n        </header>\n        <div class=\"content-area\">\n            <main>\n                <YouTubePlayer class=\"youtube-player\" ref=\"youtubePlayer\" :videoId=\"selectedSegment.videoId\"\n                    :startTime=\"selectedSegment.startTime\" :pauseTime=\"selectedSegment.endTime\"\n                    @over-pause-time=\"nextSegment\" />\n            </main>\n            <aside>\n                <h2>Segments</h2>\n                <div>\n                    <input v-model=\"filterText\" type=\"text\" placeholder=\"Filter segments by name\">\n                </div>\n                <div>\n                    <ul class=\"segments-list\">\n                        <SegmentItem v-for=\"(segment, index) in filteredSegments\" :key=\"index\" :segment=\"segment\" :index=\"index\"\n                            :class=\"{ 'selected-segment': segment === selectedSegment }\" @click=\"selectSegment(segment)\"\n                            :is-read-only=\"true\" />\n                    </ul>\n                </div>\n            </aside>\n        </div>\n    </div>\n</template>\n  \n<script>\nimport YouTubePlayer from '@/components/YouTubePlayer.vue';\nimport SegmentItem from '@/components/SegmentItem.vue';\nimport { segmentMixin } from '@/mixins/segmentMixin.js';\n\nexport default {\n    mixins: [segmentMixin],\n    components: {\n        YouTubePlayer,\n        SegmentItem,\n    },\n    name: 'ViewerInterface',\n    data() {\n        return {\n            segments: [],\n            selectedSegment: {},\n            filterText: '',\n        };\n    },\n    computed: {\n        filteredSegments() {\n            return this.segments.filter(segment =>\n                segment.name.toLowerCase().includes(this.filterText.toLowerCase())\n            );\n        },\n    },\n    methods: {\n        nextSegment() {\n            console.log(\"nextSegment.\");\n            const segments = this.filteredSegments;\n            if (segments && segments.length) {\n                const currentIndex = segments.findIndex(segment => segment === this.selectedSegment);\n                const nextIndex = currentIndex + 1;\n\n                // Check if there is a next segment\n                if (nextIndex < segments.length) {\n                    const nextSegment = segments[nextIndex];\n                    this.selectSegment(nextSegment);\n                } else {\n                    console.log(\"You've reached the end of the segments list.\");\n                    // Optional: Loop to the first segment or handle the end-of-list scenario\n                    // For looping to the first segment, you could uncomment the following line:\n                    // this.selectSegment(segments[0]);\n                }\n            }\n        },\n        selectSegment(segment) {\n            this.selectedSegment = segment;\n        },\n    },\n    mounted() {\n        const urlParams = new URLSearchParams(window.location.search);\n        const dataParam = urlParams.get('data');\n        if (dataParam) {\n            const decodedData = this.decodeQueryParam(dataParam);\n            try {\n                const compactSegments = JSON.parse(decodedData);\n                this.segments = this.convertFromCompact(compactSegments);\n            } catch (error) {\n                console.error('Error parsing segments data:', error);\n                // Handle error (e.g., show an error message)\n            }\n        }\n\n        if (this.segments && this.segments.length) {\n            this.selectSegment(this.segments[0]);\n        }\n    },\n};\n</script>\n  \n  \n<style scoped>\n.viewer-interface {\n    /* Styles for the viewer interface */\n}\n\n.video-player {\n    /* Styles for the video player container */\n}\n\n.segments-navigation {\n    /* Styles for the segments navigation list */\n}\n\n.segment-selector {\n    display: flex;\n    flex-direction: column;\n}\n\nheader {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.content-area {\n    display: flex;\n    flex-direction: row;\n    /* Aligns children (main and aside) horizontally */\n}\n\nmain {\n    flex-grow: 1;\n}\n\naside {\n    width: 300px;\n}\n\n.selected-segment {\n    background-color: rgba(0, 123, 255, 0.2);\n}\n</style>\n","import { render } from \"./ViewerInterface.vue?vue&type=template&id=05e82494&scoped=true\"\nimport script from \"./ViewerInterface.vue?vue&type=script&lang=js\"\nexport * from \"./ViewerInterface.vue?vue&type=script&lang=js\"\n\nimport \"./ViewerInterface.vue?vue&type=style&index=0&id=05e82494&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-05e82494\"]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router';\nimport SegmentSelector from '../views/SegmentSelector.vue';\nimport ViewerInterface from '../views/ViewerInterface.vue';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'SegmentSelector',\n    component: SegmentSelector,\n  },\n  {\n    path: '/viewer',\n    name: 'ViewerInterface',\n    component: ViewerInterface,\n  },\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes,\n});\n\nexport default router;\n","import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\n\ncreateApp(App).use(store).use(router).mount('#app');\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkytclipplaylist\"] = self[\"webpackChunkytclipplaylist\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(7570); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_router_view","name","__exports__","render","class","_createElementVNode","for","_hoisted_2","type","onChange","_cache","args","$options","loadJson","ref","style","onClick","triggerFileInput","saveJson","createSharableLink","$data","sharableLink","key","href","target","_hoisted_3","_createCommentVNode","_hoisted_4","_hoisted_5","_hoisted_6","$event","videoUrl","placeholder","applyVideoUrl","_component_YouTubePlayer","videoId","selectedVideoId","startTime","selectedSegment","pauseTime","endTime","_component_draggable","modelValue","segments","onEnd","header","_withCtx","addSegment","item","element","index","_createBlock","_component_SegmentItem","segment","_normalizeClass","selectSegment","onDeleteSegment","removeSegment","onSetStartTime","setCurrentTime","onSetEndTime","_","props","String","Number","enablePause","Boolean","default","watch","immediate","handler","newVal","this","loadVideo","undefined","player","seekTo","playVideo","oldVal","getPlayerState","startCheckingPlayProgress","methods","component","onYouTubeIframeAPIReady","console","log","window","YT","Player","$refs","youtubePlayer","height","width","playerVars","mute","autoplay","start","end","rel","events","onReady","onPlayerReady","onStateChange","onPlayerStateChange","onAutoplayBlocked","event","loadVideoById","startSeconds","endSeconds","tag","document","createElement","src","firstScriptTag","getElementsByTagName","parentNode","insertBefore","$emit","data","isInit","PlayerState","UNSTARTED","CUED","getCurrentTime","currentTime","setStartTime","checkPlayProgressInterval","clearInterval","setInterval","checkPlayProgress","pauseVideo","mounted","beforeUnmount","destroy","$props","isReadOnly","_toDisplayString","localSegment","_createTextVNode","formatTime","_ctx","title","Object","seconds","pad","num","size","slice","time","parseFloat","toFixed","hours","Math","floor","minutes","secs","deleteSegment","segmentMixin","decodeQueryParam","param","decodeURIComponent","atob","convertFromCompact","compactData","map","convertToCompactFormat","round","mixins","components","YouTubePlayer","draggable","SegmentItem","filterText","maxSegmentId","newSegments","sessionStorage","setItem","JSON","stringify","deep","computed","filteredSegments","filter","toLowerCase","includes","fileInput","click","file","files","reader","FileReader","onload","e","content","result","parse","convertFromCompactFormat","error","readAsText","compactSegments","jsonString","downloadJson","filename","blob","Blob","url","URL","createObjectURL","link","download","body","appendChild","removeChild","revokeObjectURL","jsonData","base64EncodedData","btoa","encodeURIComponent","viewerUrl","location","origin","length","alert","focus","copyToClipboard","text","navigator","clipboard","writeText","then","catch","err","extractVideoId","match","splice","push","timeType","oldIndex","newIndex","urlParams","URLSearchParams","search","dataParam","get","decodedData","newUrl","protocol","host","pathname","history","pushState","path","storedSegments","getItem","s","forEach","onOverPauseTime","nextSegment","_Fragment","_renderList","currentIndex","findIndex","nextIndex","routes","SegmentSelector","ViewerInterface","router","createRouter","createWebHistory","process","createApp","App","use","store","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}